# Generated by roxygen2: do not edit by hand

export("%w/o%")
export(PowerUsage)
export(TIME_ORIGIN)
export(TZ_DEFAULT)
export(asNumericAndRound)
export(asNumericFullSignificantFigure)
export(assureNumeric)
export(chkFileExtension)
export(chkLocalFileExistence)
export(chkLocalFileExistence_leapOver)
export(chkRemoteFileExistence)
export(chkSysName)
export(convertBin2Dec)
export(convertDec2Bin)
export(convertDec2Hex)
export(convertHex2Dec)
export(convertHumanDate2KST)
export(convertHumanDate2UTC)
export(convertHumanDate2customTZ)
export(convertHumanDateKST2timestampUTC)
export(convertJsonDateEncored)
export(convertPowerUnit)
export(convertTimeUnit2PeriodClass)
export(convertTimeUnitAsSec)
export(convertTimestampUTC2HumandateCustomTZ)
export(convertTimestampUTC2HumandateKST)
export(convertTimezone)
export(countTimeSlot)
export(divideByThousand)
export(expandDigit)
export(expandSciNotation)
export(formatNonSci)
export(getConvertibleBase)
export(getDbConfigDir)
export(getDbGroup)
export(getPowerUnitSet)
export(getQueryEndTimestamp)
export(getQueryStartTimestamp)
export(getQueryTimestamp)
export(getRelativeCoeff_mW_Base)
export(getTimeUnitSet)
export(grepMulti)
export(installBaseEncored)
export(isCsv)
export(isRds)
export(isTimestampUnitSecond)
export(isZeroLength)
export(isZeroRow)
export(listFilesVectorized)
export(makeFileNamePattern)
export(nor)
export(norIsNullIsNa)
export(remoteRunWrapper)
export(returnNullIfZeroRow)
export(roundTime)
export(rowMedian)
export(runRemoteScript)
export(scpFileFromRemote)
export(scpFileToRemote)
export(scpWrapper)
export(setDigit)
export(setTimeDigit)
export(setdiffNumericForced)
export(setdiffNumericForcedCommutative)
export(sshpassWrapper)
export(sysTimeEncored)
export(timeSequenceEncored)
export(updatePower.PowerUsage)
export(vectorizedMedian)
export(whichMulti)
export(writeEmptyFile)
import(bcR)
import(dplyr)
importFrom(Rcpp,evalCpp)
importFrom(devtools,install_github)
importFrom(lubridate,days)
importFrom(lubridate,hour)
importFrom(lubridate,hours)
importFrom(lubridate,minutes)
importFrom(magrittr,"%<>%")
importFrom(plyr,llply)
importFrom(plyr,mdply)
importFrom(stringr,str_replace)
importFrom(utils,write.table)
useDynLib(baseEncored)
